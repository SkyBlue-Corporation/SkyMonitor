version: '3.8'

services:
  # Application Flask (web)
  web:
    build: .
    # NOTE: host networking required to see the host LAN (Linux only)
    network_mode: "host"
    environment:
      - FLASK_ENV=production
      - INFLUXDB_URL=http://localhost:8086
      - INFLUXDB_TOKEN=monitoring-token
      - INFLUXDB_ORG=monitoring-org
      - INFLUXDB_BUCKET=monitoring-data
      # Par défaut, on désactive les jobs lourds (changez si besoin)
      - DISABLE_HEAVY_TESTS=true
    # Monte les logs pour pouvoir lire depuis l'hôte
    volumes:
      - ./logs:/app/logs
    # Capabilités réseau nécessaires pour certains scans nmap (SYN/raw)
    cap_add:
      - NET_RAW
      - NET_ADMIN
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5000/api/system/stats || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  # InfluxDB
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=monitoring-org
      - DOCKER_INFLUXDB_INIT_BUCKET=monitoring-data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=monitoring-token
    volumes:
      - influxdb_data:/var/lib/influxdb2
    restart: unless-stopped

  # Grafana
  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - influxdb
    restart: unless-stopped

volumes:
  influxdb_data:
  grafana_data:
